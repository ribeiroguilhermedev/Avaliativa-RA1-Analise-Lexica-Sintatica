Expression: (5 (3 2 +) +)
Tree: (expr ( (operationExpr (item 5) (item ( (operationExpr (item 3) (item 2) (op +)) )) (op +)) ))

Expression: ((1 RES) 2 ^)
Tree: (expr ( (operationExpr (item ( (resExpr (item 1) RES) )) (item 2) (op ^)) ))

Expression: (100 MEM)
Tree: (expr ( (memExpr (item 100) MEM) ))

Expression: ((MEM 2 *) (1 2 +) +)
Tree: (expr ( (operationExpr (item ( MEM (item 2) (op *) )) (item ( (operationExpr (item 1) (item 2) (op +)) )) (op +)) ))

Expression: (6 2 |)
Tree: (expr ( (operationExpr (item 6) (item 2) (op |)) ))

Expression: ((1 RES) 3.5 +)
Tree: (expr ( (operationExpr (item ( (resExpr (item 1) RES) )) (item 3.5) (op +)) ))

Expression: (((2 RES) 2 ^) ((1 RES) 4 /) +)
Tree: (expr ( (operationExpr (item ( (operationExpr (item ( (resExpr (item 2) RES) )) (item 2) (op ^)) )) (item ( (operationExpr (item ( (resExpr (item 1) RES) )) (item 4) (op /)) )) (op +)) ))

